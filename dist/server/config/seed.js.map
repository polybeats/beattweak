{"version":3,"sources":["config/seed.js"],"names":[],"mappings":";;;;;AAKA;;AACA;;;;;;AAGA,IAAI,YAAY,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,KAA5B,EAAmC,KAAnC,CAAhB;AACA,IAAI,OAAJ;IAAa,WAAW;AACpB,SAAO,GADa;AAEpB,kBAAgB,CAFI;AAGpB,eAAa,EAHO;AAIpB,YAAU;AAJU,CAAxB;AAQA,IAAI,WAAW,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,SAA5B,CAAf;IAAuD,UAAU,EAAC,OAAO,CAAR,EAAW,OAAO,EAAlB,EAAjE;AACA,KAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,SAAS,WAA5B,EAAyC,GAAzC,EAA8C;AAC5C,UAAQ,KAAR,CAAc,IAAd,CAAmB,KAAnB;AACD;AACD,SAAS,QAAT,GAAoB,SAAS,GAAT,CAAa,UAAS,IAAT,EAAe,CAAf,EAAkB;AACjD,SAAO,EAAC,MAAM,IAAP,EAAa,OAAO,CAApB,EAAuB,OAAO,QAAQ,KAAtC,EAAP;AACD,CAFmB,CAApB;;AAIA,eAAK,IAAL,CAAU,EAAV,EAAc,MAAd,GACG,IADH,CACQ,YAAM;AACV,iBAAK,MAAL,CAAY,UAAU,GAAV,CAAc,UAAS,IAAT,EAAe;AACvC,QAAI,OAAO,EAAC,MAAM,OAAO,OAAd,EAAX;;AAEA,SAAK,IAAI,CAAT,IAAc,QAAd,EAAwB;AACtB,WAAK,CAAL,IAAU,SAAS,CAAT,CAAV;AACD;AACD,WAAO,IAAP;AACD,GAPW,CAAZ;AAQD,CAVH","file":"config/seed.js","sourcesContent":["/**\r\n * Populate DB with sample data on server start\r\n * to disable, edit config/environment/index.js, and set `seedDB: false`\r\n */\r\n\r\n'use strict';\r\nimport Room from '../api/room/room.model';\r\n\r\n\r\nvar roomNames = ['Bass', 'House', 'Techno', 'Dub', 'DnB'];\r\nvar newRoom, new_mock = {\r\n    tempo: 140,\r\n    bar_resolution: 8,\r\n    grid_length: 16,\r\n    channels: [\r\n      \r\n    ]\r\n  };\r\nvar ch_names = ['Kick', 'Snare', 'Hi-hat', 'Rimshot'], channel = {index: 0, beats: []}\r\nfor(var i = 0; i < new_mock.grid_length; i++) {\r\n  channel.beats.push(false);\r\n}\r\nnew_mock.channels = ch_names.map(function(name, i) {\r\n  return {name: name, index: i, beats: channel.beats};\r\n})\r\n\r\nRoom.find({}).remove()\r\n  .then(() => {\r\n    Room.create(roomNames.map(function(name) {\r\n      var mock = {name: name + ' Room'};\r\n\r\n      for (var i in new_mock) {\r\n        mock[i] = new_mock[i];\r\n      }\r\n      return mock;\r\n    }));\r\n  });\r\n\r\n/*({\r\n      name: 'Development Tools',\r\n      info: 'Integration with popular tools such as Bower, Grunt, Babel, Karma, ' +\r\n             'Mocha, JSHint, Node Inspector, Livereload, Protractor, Jade, ' +\r\n             'Stylus, Sass, and Less.'\r\n    }, {\r\n      name: 'Server and Client integration',\r\n      info: 'Built with a powerful and fun stack: MongoDB, Express, ' +\r\n             'AngularJS, and Node.'\r\n    }, {\r\n      name: 'Smart Build System',\r\n      info: 'Build system ignores `spec` files, allowing you to keep ' +\r\n             'tests alongside code. Automatic injection of scripts and ' +\r\n             'styles into your index.html'\r\n    }, {\r\n      name: 'Modular Structure',\r\n      info: 'Best practice client and server structures allow for more ' +\r\n             'code reusability and maximum scalability'\r\n    }, {\r\n      name: 'Optimized Build',\r\n      info: 'Build process packs up your templates as a single JavaScript ' +\r\n             'payload, minifies your scripts/css/images, and rewrites asset ' +\r\n             'names for caching.'\r\n    }, {\r\n      name: 'Deployment Ready',\r\n      info: 'Easily deploy your app to Heroku or Openshift with the heroku ' +\r\n             'and openshift subgenerators'\r\n    })*/"],"sourceRoot":"/source/"}